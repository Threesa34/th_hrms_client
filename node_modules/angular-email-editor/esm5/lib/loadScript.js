var scriptUrl = '//editor.unlayer.com/embed.js?2';
var callbacks = [];
var loaded = false;
var isScriptInjected = function () {
    var scripts = document.querySelectorAll('script');
    var injected = false;
    scripts.forEach(function (script) {
        if (script.src.includes(scriptUrl)) {
            injected = true;
        }
    });
    return injected;
};
var ɵ0 = isScriptInjected;
var addCallback = function (callback) {
    callbacks.push(callback);
};
var ɵ1 = addCallback;
var runCallbacks = function () {
    if (loaded) {
        var callback = void 0;
        while ((callback = callbacks.shift())) {
            callback();
        }
    }
};
var ɵ2 = runCallbacks;
export var loadScript = function (callback) {
    addCallback(callback);
    if (!isScriptInjected()) {
        var embedScript = document.createElement('script');
        embedScript.setAttribute('src', scriptUrl);
        embedScript.onload = function () {
            loaded = true;
            runCallbacks();
        };
        document.head.appendChild(embedScript);
    }
    else {
        runCallbacks();
    }
};
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZFNjcmlwdC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItZW1haWwtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2xvYWRTY3JpcHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTSxTQUFTLEdBQUcsaUNBQWlDLENBQUM7QUFDcEQsSUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBQ3JCLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQztBQUVuQixJQUFNLGdCQUFnQixHQUFHO0lBQ3ZCLElBQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNwRCxJQUFJLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFFckIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLE1BQU07UUFDckIsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNsQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1NBQ2pCO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDLENBQUM7O0FBRUYsSUFBTSxXQUFXLEdBQUcsVUFBQyxRQUFRO0lBQzNCLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDM0IsQ0FBQyxDQUFDOztBQUVGLElBQU0sWUFBWSxHQUFHO0lBQ25CLElBQUksTUFBTSxFQUFFO1FBQ1YsSUFBSSxRQUFRLFNBQUEsQ0FBQztRQUViLE9BQU8sQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUU7WUFDckMsUUFBUSxFQUFFLENBQUM7U0FDWjtLQUNGO0FBQ0gsQ0FBQyxDQUFDOztBQUVGLE1BQU0sQ0FBQyxJQUFNLFVBQVUsR0FBRyxVQUFDLFFBQVE7SUFDakMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRXRCLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFO1FBQ3ZCLElBQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckQsV0FBVyxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDM0MsV0FBVyxDQUFDLE1BQU0sR0FBRztZQUNuQixNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ2QsWUFBWSxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDO1FBQ0YsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDeEM7U0FBTTtRQUNMLFlBQVksRUFBRSxDQUFDO0tBQ2hCO0FBQ0gsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2NyaXB0VXJsID0gJy8vZWRpdG9yLnVubGF5ZXIuY29tL2VtYmVkLmpzPzInO1xuY29uc3QgY2FsbGJhY2tzID0gW107XG5sZXQgbG9hZGVkID0gZmFsc2U7XG5cbmNvbnN0IGlzU2NyaXB0SW5qZWN0ZWQgPSAoKSA9PiB7XG4gIGNvbnN0IHNjcmlwdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHQnKTtcbiAgbGV0IGluamVjdGVkID0gZmFsc2U7XG5cbiAgc2NyaXB0cy5mb3JFYWNoKChzY3JpcHQpID0+IHtcbiAgICBpZiAoc2NyaXB0LnNyYy5pbmNsdWRlcyhzY3JpcHRVcmwpKSB7XG4gICAgICBpbmplY3RlZCA9IHRydWU7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gaW5qZWN0ZWQ7XG59O1xuXG5jb25zdCBhZGRDYWxsYmFjayA9IChjYWxsYmFjaykgPT4ge1xuICBjYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG59O1xuXG5jb25zdCBydW5DYWxsYmFja3MgPSAoKSA9PiB7XG4gIGlmIChsb2FkZWQpIHtcbiAgICBsZXQgY2FsbGJhY2s7XG5cbiAgICB3aGlsZSAoKGNhbGxiYWNrID0gY2FsbGJhY2tzLnNoaWZ0KCkpKSB7XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGxvYWRTY3JpcHQgPSAoY2FsbGJhY2spID0+IHtcbiAgYWRkQ2FsbGJhY2soY2FsbGJhY2spO1xuXG4gIGlmICghaXNTY3JpcHRJbmplY3RlZCgpKSB7XG4gICAgY29uc3QgZW1iZWRTY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICBlbWJlZFNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3NyYycsIHNjcmlwdFVybCk7XG4gICAgZW1iZWRTY3JpcHQub25sb2FkID0gKCkgPT4ge1xuICAgICAgbG9hZGVkID0gdHJ1ZTtcbiAgICAgIHJ1bkNhbGxiYWNrcygpO1xuICAgIH07XG4gICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChlbWJlZFNjcmlwdCk7XG4gIH0gZWxzZSB7XG4gICAgcnVuQ2FsbGJhY2tzKCk7XG4gIH1cbn07XG4iXX0=