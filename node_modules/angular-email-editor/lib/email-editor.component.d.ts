import { OnInit, AfterViewInit, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export interface UnlayerOptions {
    projectId?: number;
    tools?: object;
    appearance?: object;
    locale?: string;
}
export declare class EmailEditorComponent implements OnInit, AfterViewInit {
    editorId: string;
    options: UnlayerOptions;
    projectId: number;
    tools: object;
    appearance: object;
    locale: string;
    minHeight: string;
    loaded: EventEmitter<{}>;
    editor: any;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    protected loadEditor(): void;
    loadDesign(data: object): void;
    saveDesign(cb: (data: object) => void): void;
    exportHtml(cb: (data: object) => void): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EmailEditorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<EmailEditorComponent, "email-editor", never, { "options": "options"; "minHeight": "minHeight"; "editorId": "editorId"; "projectId": "projectId"; "tools": "tools"; "appearance": "appearance"; "locale": "locale"; }, { "loaded": "loaded"; }, never, never>;
}

//# sourceMappingURL=email-editor.component.d.ts.map